/**
* jquery.smartSticky 2.1.1
* https://github.com/oplaner4/jquery.smartSticky
* by Ondrej Planer, oplaner4@gmail.com
* 
* This library requires jQuery.js
* See the documentation before using this library please
* jquery.smartSticky.js may be freely distributed under the MIT license.
*
* Copyright 2020, Ondrej Planer
 * 
 * 
 * PRESERVE THIS PLEASE
*/

!function (t) { "use strict"; "function" == typeof define && define.amd ? define(["jquery"], t) : "undefined" != typeof exports ? module.exports = t(require("jquery")) : t(window.jQuery) }(function (t) { "use strict"; var e = function (e, i) { var s = this; s._isEnabled = !0, s._settingsManagerInstance = new n(i, e), s.getSettingsManager().isContainerOverflowing() ? (s._scrollingManagerInstance = new r(s.getSettingsManager().getContainer()).onScrolling(function () { s.adjustToCurrentScrollTop() }), t.fn.smartSticky.windowScrollingManager.onScrolling(function () { s.activated() && s.getPositionManager().setYCoordManager().recalculateFixedPosition() })) : s._scrollingManagerInstance = t.fn.smartSticky.windowScrollingManager.onScrolling(function () { s.adjustToCurrentScrollTop() }), s._positionManagerInstance = new o(s._settingsManagerInstance, s._scrollingManagerInstance), t.fn.smartSticky.windowScrollingManager.getOverflowingElement().on("resize", function () { s.getPositionManager().setOrigPosition(), s.adjustToCurrentScrollTop() }).trigger("resize") }; e.prototype.getPositionManager = function () { return this._positionManagerInstance }, e.prototype.getSettingsManager = function () { return this._settingsManagerInstance }, e.prototype.getScrollingManager = function () { return this._scrollingManagerInstance }, e.prototype.adjustToCurrentScrollTop = function () { return this.isEnabled() && (this.getPositionManager().outOfOrigPosition() ? (this.activated() || this.activate(), this.hide().getPositionManager().canBeShownDueToOrigPosition() && (this.getPositionManager().prepareFixedPosition().outOfContainer() || this.getPositionManager().canBeShownDueToScrolling() && (this.getSettingsManager().getElement().removeClass(t.fn.smartSticky.classes.invisible), this.getPositionManager().recalculateFixedPosition()))) : this.activated() && this.deactivate()), this }, e.prototype.enable = function () { return this._isEnabled = !0, this.adjustToCurrentScrollTop(), this }, e.prototype.disable = function () { return this._isEnabled = !1, this.deactivate(), this }, e.prototype.isEnabled = function () { return this._isEnabled }, e.prototype.hide = function () { return this.getSettingsManager().getElement().addClass(t.fn.smartSticky.classes.invisible), this }, e.prototype.setOptions = function (t) { return this.getSettingsManager().setOptions(t, !0), this }, e.prototype.deactivate = function () { return this.getPositionManager().setOrigPosition(), this.getSettingsManager().getElement().trigger("smartSticky.deactivate", [this.getSettingsManager()]), this }, e.prototype.activate = function () { return this.getSettingsManager().preparePlaceholder(), this.getSettingsManager().getElement().removeClass(t.fn.smartSticky.classes.background).css({ left: this.getSettingsManager().getFixedLeft(), width: this.getSettingsManager().getFixedWidth() }).addClass(t.fn.smartSticky.classes.active).trigger("smartSticky.activate", [this.getSettingsManager()]), "rgba(0, 0, 0, 0)" === this.getSettingsManager().getElement().css("background-color") && this.getSettingsManager().getElement().addClass(t.fn.smartSticky.classes.background), this }, e.prototype.activated = function () { return this.getSettingsManager().getElement().hasClass(t.fn.smartSticky.classes.active) }; var n = function (e, n) { this._options = null, this._container = null, this._isContainerOverflowing = null, this._elem = n.addClass(t.fn.smartSticky.classes.root).wrap(t("<div />", { class: t.fn.smartSticky.classes.placeholder })), this.setOptions(e, !1).setContainer() }; n.prototype.getElement = function () { return this._elem }, n.prototype.setOptions = function (e, n) { return this._options = t.extend(!0, {}, n ? this._options : t.fn.smartSticky.defaults, e), this }, n.prototype.getOptions = function () { return this._options }, n.prototype.setContainer = function () { var e = this.getOptions().container; return e instanceof Function && (e = e(this)), (e instanceof HTMLElement || e instanceof HTMLCollection || e instanceof String || "string" == typeof e) && (e = t(e)), e = e instanceof jQuery && e.length > 0 ? e.first() : this.getPlaceholder().parent(), this._container = e.addClass(t.fn.smartSticky.classes.container), this._isContainerOverflowing = new Array("auto", "scroll", "overlay").indexOf(this.getContainer().css("overflow")) > -1, this }, n.prototype.getContainer = function () { return this._container }, n.prototype.isContainerOverflowing = function () { return this._isContainerOverflowing }, n.prototype.getFixedLeft = function () { var t = this.getOptions().css.fixed.left; return t instanceof Function && (t = t(this)), t === parseFloat(t) || t instanceof Number || t instanceof String || "string" == typeof t ? t : this.getElement().offset().left }, n.prototype.getFixedWidth = function () { var t = this.getOptions().css.fixed.width; return t instanceof Function && (t = t(this)), t === parseFloat(t) || t instanceof Number || t instanceof String || "string" == typeof t ? t : this.getElement().outerWidth() }, n.prototype.getOrigOffsetTop = function () { return this.getElement().data("offsetTop") }, n.prototype.getOrigHeight = function () { return this.getElement().data("height") }, n.prototype.getPlaceholder = function () { return this.getElement().parent("." + t.fn.smartSticky.classes.placeholder) }, n.prototype.preparePlaceholder = function () { return this.getPlaceholder().height(this.getElement().outerHeight()), this }; var i = function (t) { this._yCoordObj = t instanceof Object ? t : { top: 0 } }; i.prototype.isCalculatedFromTop = function () { return this._yCoordObj.hasOwnProperty("top") }, i.prototype.getFromTop = function () { return this.isCalculatedFromTop() ? this._yCoordObj.top : "initial" }, i.prototype.getFromBottom = function () { return this.isCalculatedFromTop() ? "initial" : this._yCoordObj.bottom }; var o = function (t, e) { this._settingsManagerInstance = t, this._scrollingManagerInstance = e, this._fixedPosition = null, this._yCoordManagerInstance = null, this.prepareFixedPosition() }; o.prototype.getSettingsManager = function () { return this._settingsManagerInstance }, o.prototype.getScrollingManager = function () { return this._scrollingManagerInstance }, o.prototype.getYCoordManager = function () { return this._yCoordManagerInstance }, o.prototype.setYCoordManager = function () { return this._yCoordManagerInstance = new i(t.fn.smartSticky.positions[this.getFixedPosition()](this)), this }, o.prototype.setOrigPosition = function () { return this.getSettingsManager().getPlaceholder().css("height", "initial"), this.getSettingsManager().getElement().removeClass(t.fn.smartSticky.classes.active).css({ left: "initial", top: "initial", bottom: "initial", width: "initial" }).data({ offsetTop: this.getSettingsManager().getElement().offset().top + (this.getSettingsManager().isContainerOverflowing() ? this.getScrollingManager().getCurrentScrollTop() - this.getScrollingManager().getOverflowingElement().offset().top : 0), height: this.getSettingsManager().getElement().outerHeight() }), this }, o.prototype.recalculateFixedPosition = function () { return this.getSettingsManager().getElement().css({ top: this.getYCoordManager().getFromTop(), bottom: this.getYCoordManager().getFromBottom() }), this }, o.prototype.outOfOrigPositionAbove = function () { return this.getSettingsManager().getOrigOffsetTop() - this.getSettingsManager().getOptions().show.delay - this.getScrollingManager().getOverflowingElement().outerHeight() > this.getScrollingManager().getCurrentScrollTop() }, o.prototype.outOfOrigPositionUnder = function () { return this.getSettingsManager().getOrigOffsetTop() + this.getSettingsManager().getOrigHeight() + this.getSettingsManager().getOptions().show.delay < this.getScrollingManager().getCurrentScrollTop() }, o.prototype.outOfOrigPosition = function () { return this.outOfOrigPositionAbove() || this.outOfOrigPositionUnder() }, o.prototype.outOfContainerAbove = function () { return t.fn.smartSticky.windowScrollingManager.getCurrentScrollTop() + (this.getYCoordManager().isCalculatedFromTop() ? this.getYCoordManager().getFromTop() : t.fn.smartSticky.windowScrollingManager.getOverflowingElement().height() - this.getSettingsManager().getElement().outerHeight() - this.getYCoordManager().getFromBottom()) < this.getSettingsManager().getContainer().offset().top }, o.prototype.outOfContainerUnder = function () { return t.fn.smartSticky.windowScrollingManager.getCurrentScrollTop() + (this.getYCoordManager().isCalculatedFromTop() ? this.getSettingsManager().getElement().outerHeight() + this.getYCoordManager().getFromTop() : t.fn.smartSticky.windowScrollingManager.getOverflowingElement().height() - this.getYCoordManager().getFromBottom()) > this.getSettingsManager().getContainer().offset().top + this.getSettingsManager().getContainer().outerHeight() }, o.prototype.outOfContainer = function () { return !this.getSettingsManager().isContainerOverflowing() && (this.outOfContainerAbove() || this.outOfContainerUnder()) }, o.prototype.canBeShownDueToOrigPosition = function () { return !(!this.getSettingsManager().getOptions().show.original.above || !this.outOfOrigPositionAbove()) || !(!this.getSettingsManager().getOptions().show.original.under || !this.outOfOrigPositionUnder()) }, o.prototype.canBeShownDueToScrolling = function () { if (this.getSettingsManager().getOptions().show.scrolling instanceof Function) return !0 === this.getSettingsManager().getOptions().show.scrolling(this.getSettingsManager(), this.getScrollingManager()); if (this.getScrollingManager().scrollingDown()) { if (this.getSettingsManager().getOptions().show.scrolling.down) return !0 } else if (this.getSettingsManager().getOptions().show.scrolling.up) return !0; return !1 }, o.prototype.getFixedPosition = function () { return this._fixedPosition }, o.prototype.prepareFixedPosition = function () { var e = this.getSettingsManager().getOptions().show.fixed; for (e instanceof Function && (e = e(this.getSettingsManager(), this.getScrollingManager())), this._fixedPosition = Object.keys(t.fn.smartSticky.positions)[0]; t.fn.smartSticky.positions.hasOwnProperty(e);)this._fixedPosition = e, e = t.fn.smartSticky.positions[this._fixedPosition](this); return this.setYCoordManager() }; var r = function (t) { var e = this; e._lastScrollTop = 0, e._onScrollingCallbackArr = new Array, e._overflowingElement = t.on("scroll", function () { e._onScrollingCallbackArr.forEach(function (t) { t(e) }), e.update() }) }; r.prototype.getOverflowingElement = function () { return this._overflowingElement }, r.prototype.scrollingDown = function () { return this._lastScrollTop <= this.getCurrentScrollTop() }, r.prototype.getCurrentScrollTop = function () { return this.getOverflowingElement().scrollTop() }, r.prototype.update = function () { return this._lastScrollTop = this.getCurrentScrollTop(), this }, r.prototype.onScrolling = function (t) { return this._onScrollingCallbackArr.push(t), this }, t.fn.smartSticky = function (n) { var i = n instanceof String || "string" == typeof n, o = arguments; if (i && "instance" === n) { var r = this.data("smartStickyManagerInstance"); if (r instanceof e) return r; t.error("smartSticky has not been initialized") } return this.each(function () { var r = t(this); if (i) { var s = r.data("smartStickyManagerInstance"); s instanceof e && s[n] instanceof Function && s[n].apply(s, Array.prototype.slice.call(o, 1)) } else r.data("smartStickyManagerInstance") || r.data("smartStickyManagerInstance", new e(r, n)) }) }, t.fn.smartSticky.defaults = { show: { delay: 50, original: { under: !0, above: !1 }, fixed: "top", scrolling: { up: !1, down: !0 } }, container: null, css: { fixed: { width: null, left: null } } }, t.fn.smartSticky.classes = { placeholder: "sticky-smart-placeholder", root: "sticky-smart", invisible: "sticky-smart-invisible", active: "sticky-smart-active", background: "sticky-smart-background", container: "sticky-smart-container" }, t.fn.smartSticky.positions = { top: function (e) { return e.getSettingsManager().isContainerOverflowing() ? { top: e.getSettingsManager().getContainer().offset().top - t.fn.smartSticky.windowScrollingManager.getCurrentScrollTop() } : { top: 0 } }, bottom: function (e) { return e.getSettingsManager().isContainerOverflowing() ? { bottom: Math.ceil(t.fn.smartSticky.windowScrollingManager.getCurrentScrollTop() + t.fn.smartSticky.windowScrollingManager.getOverflowingElement().height() - e.getSettingsManager().getContainer().offset().top - e.getSettingsManager().getContainer().outerHeight()) } : { bottom: 0 } }, toggle: function (t) { return t.getScrollingManager().scrollingDown() ? "top" : "bottom" } }, t.fn.smartSticky.windowScrollingManager = new r(t(window)) });