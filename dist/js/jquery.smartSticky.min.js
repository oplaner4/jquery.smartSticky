/**
* jquery.smartSticky.js 1.0.1
* by Ondrej Planer
* 
* This library requires jQuery.js
* See the documentation before using this library please
* 
*
* Copyright 2020, Ondrej Planer
*/

!function (t) { "use strict"; "function" == typeof define && define.amd ? define(["jquery"], t) : "undefined" != typeof exports ? module.exports = t(require("jquery")) : t(window.jQuery) }(function (t) { "use strict"; var i = function () { var i = this; i.lastScrollTop = 0, i.onScrollingCallbackArr = new Array, i.ww = t(window).on("scroll", function () { i.onScrollingCallbackArr.forEach(function (t) { t(i) }), i.update() }) }; i.prototype.scrollingDown = function () { return this.lastScrollTop < this.getCurrentScrollTop() }, i.prototype.getCurrentScrollTop = function () { return this.ww.scrollTop() }, i.prototype.update = function () { return this.lastScrollTop = this.getCurrentScrollTop(), this }, i.prototype.onScrolling = function (t) { return this.onScrollingCallbackArr.push(t), this }; var o = new i, e = function (i, e) { var s = this; s.enabled = !0, s.defaults = { show: { position: { original: { under: !0, above: !1 }, sticky: "top" }, scrolling: { sticky: { delay: 50 }, up: !1, down: !0 } }, container: !1, css: { classes: { root: "sticky-smart", placeholder: "sticky-smart-placeholder", invisible: "sticky-smart-invisible", active: "sticky-smart-active", bottom: "sticky-smart-bottom", top: "sticky-smart-top" }, sticky: { width: !1, left: !1 } } }, s.options = t.extend(!0, {}, s.defaults, e), s.elem = i.addClass(s.options.css.classes.root).wrap(t("<div />", { class: s.options.css.classes.placeholder })), s.smartStickyElementManagerInstance = new n(s.elem, s.options), o.onScrolling(function () { s.adjustToCurrentScrollTop() }), o.ww.on("resize", function () { s.getSmartStickyElementManager().setOriginalPosition(), s.adjustToCurrentScrollTop() }).trigger("resize") }; e.prototype.getSmartStickyElementManager = function () { return this.smartStickyElementManagerInstance }, e.prototype.canBeShownDueToScrolling = function () { if (this.options.show.scrolling instanceof Function) return !0 === this.options.show.scrolling(this, o.scrollingDown()); if (o.scrollingDown()) { if (this.options.show.scrolling.down) return !0 } else if (this.options.show.scrolling.up) return !0; return !1 }, e.prototype.canBeShown = function () { return !!this.getSmartStickyElementManager().canBeShownDueToOrigPosition() && this.canBeShownDueToScrolling() }, e.prototype.adjustToCurrentScrollTop = function () { return this.enabled && (this.getSmartStickyElementManager().outOfOrigPosition() ? (this.elem.hasClass(this.options.css.classes.active) || this.getSmartStickyElementManager().activateStickyPosition(), this.elem.addClass(this.options.css.classes.invisible), this.getSmartStickyElementManager().outOfContainer() || this.canBeShown() && (this.getSmartStickyElementManager().toBePlacedBottom() ? this.elem.removeClass(this.options.css.classes.invisible).removeClass(this.options.css.classes.top).addClass(this.options.css.classes.bottom) : this.elem.removeClass(this.options.css.classes.invisible).removeClass(this.options.css.classes.bottom).addClass(this.options.css.classes.top))) : this.getSmartStickyElementManager().setOriginalPosition()), this }, e.prototype.enable = function () { return this.enabled = !0, this.adjustToCurrentScrollTop(), this }, e.prototype.disable = function () { return this.enabled = !1, this.getSmartStickyElementManager().setOriginalPosition(), this }, e.prototype.hide = function () { return this.elem.addClass(this.options.css.classes.invisible), this }; var n = function (t, i) { this.elem = t, this.options = i, this.positions = ["top", "bottom", "toggle"] }; n.prototype.setOriginalPosition = function () { return this.elem.removeClass(this.options.css.classes.active).css({ left: 0, width: "100%" }).data({ offsetTop: this.elem.offset().top, height: this.elem.outerHeight() }), this.getPlaceholder().height(this.elem.outerHeight()), this }, n.prototype.activateStickyPosition = function () { return this.elem.addClass(this.options.css.classes.active).css({ left: this.getStickyLeft(), width: this.getStickyWidth() }), this }, n.prototype.getPlaceholder = function () { return this.elem.parent("." + this.options.css.classes.placeholder) }, n.prototype.getOrigOffsetTop = function () { return this.elem.data("offsetTop") }, n.prototype.getOrigHeight = function () { return this.elem.data("height") }, n.prototype.getContainer = function () { return this.options.container instanceof Function ? this.options.container(this.elem) : this.options.container instanceof jQuery ? this.options.container : this.options.container instanceof HTMLCollection || this.options.container instanceof String || "string" == typeof this.options.container ? t(this.options.container) : this.getPlaceholder().parent() }, n.prototype.getStickyLeft = function () { if (this.options.css.sticky.left instanceof Function) { var t = this.options.css.sticky.left(this, o.scrollingDown()); if (Number.isFinite(t) || t instanceof String || "string" == typeof t) return t } return this.getContainer().offset().left }, n.prototype.getStickyWidth = function () { if (this.options.css.sticky.width instanceof Function) { var t = this.options.css.sticky.width(this, o.scrollingDown()); if (Number.isFinite(t) || t instanceof String || "string" == typeof t) return t } return this.getContainer().width() }, n.prototype.outOfOrigPositionAbove = function () { return this.getOrigOffsetTop() - this.getStickyPositionDelay() - o.ww.height() > o.getCurrentScrollTop() }, n.prototype.outOfOrigPositionUnder = function () { return this.getOrigOffsetTop() + this.getOrigHeight() + this.getStickyPositionDelay() < o.getCurrentScrollTop() }, n.prototype.outOfOrigPosition = function () { return this.outOfOrigPositionAbove() || this.outOfOrigPositionUnder() }, n.prototype.outOfContainerAbove = function () { return o.getCurrentScrollTop() + (this.toBePlacedBottom() ? this.elem.outerHeight() : 0) < this.getContainer().offset().top }, n.prototype.outOfContainerUnder = function () { var t = this.getContainer(); return o.getCurrentScrollTop() + (this.toBePlacedBottom() ? o.ww.height() : this.elem.outerHeight()) > t.offset().top + t.outerHeight() }, n.prototype.outOfContainer = function () { return this.outOfContainerAbove() || this.outOfContainerUnder() }, n.prototype.getStickyPosition = function () { var t = this.options.show.position.sticky; if (t instanceof Function && (t = t(o.scrollingDown(), this)), this.positions.indexOf(t) > -1) { if ("toggle" !== t) return t; if (!o.scrollingDown()) return "bottom" } return "top" }, n.prototype.toBePlacedBottom = function () { return "bottom" === this.getStickyPosition() }, n.prototype.canBeShownDueToOrigPosition = function () { return !(!this.outOfOrigPositionAbove() || !this.options.show.position.original.above) || !(!this.outOfOrigPositionUnder() || !this.options.show.position.original.under) }, n.prototype.getStickyPositionDelay = function () { return this.options.show.scrolling instanceof Function ? 0 : this.options.show.scrolling.sticky.delay }, t.fn.smartSticky = function (i) { var o = i instanceof String || "string" == typeof i, n = arguments; if (o && "instance" === i) { var s = this.data("smartStickyManagerInstance"); if (s instanceof e) return s; t.error("smartSticky has not been initialized") } return this.each(function () { var s = t(this); if (o) { var r = s.data("smartStickyManagerInstance"); r instanceof e && r[i] instanceof Function && r[i].apply(r, Array.prototype.slice.call(n, 1)) } else s.data("smartStickyManagerInstance") || s.data("smartStickyManagerInstance", new e(s, i)) }) } });