/**
* jquery.smartSticky.js 1.1.0
* by Ondrej Planer
* 
* This library requires jQuery.js
* See the documentation before using this library please
* jquery.smartSticky.js may be freely distributed under the MIT license.
*
* Copyright 2020, Ondrej Planer
*/

!function (t) { "use strict"; "function" == typeof define && define.amd ? define(["jquery"], t) : "undefined" != typeof exports ? module.exports = t(require("jquery")) : t(window.jQuery) }(function (t) { "use strict"; var e = function () { var e = this; e.lastScrollTop = 0, e.onScrollingCallbackArr = new Array, e.ww = t(window).on("scroll", function () { e.onScrollingCallbackArr.forEach(function (t) { t(e) }), e.update() }) }; e.prototype.scrollingDown = function () { return this.lastScrollTop < this.getCurrentScrollTop() }, e.prototype.getCurrentScrollTop = function () { return this.ww.scrollTop() }, e.prototype.update = function () { return this.lastScrollTop = this.getCurrentScrollTop(), this }, e.prototype.onScrolling = function (t) { return this.onScrollingCallbackArr.push(t), this }; var o = new e, i = function (e, i) { var n = this; n.enabled = !0, n.defaults = { show: { delay: 50, original: { under: !0, above: !1 }, fixed: "top", scrolling: { up: !1, down: !0 } }, container: !1, css: { classes: { root: "sticky-smart", placeholder: "sticky-smart-placeholder", invisible: "sticky-smart-invisible", active: "sticky-smart-active", bottom: "sticky-smart-bottom", top: "sticky-smart-top", background: "sticky-smart-background" }, fixed: { width: !1, left: !1 } } }, n.options = t.extend(!0, {}, n.defaults, i), n.elem = e.addClass(n.options.css.classes.root).wrap(t("<div />", { class: n.options.css.classes.placeholder })), n.smartStickyElementManagerInstance = new s(n.elem, n.options), o.onScrolling(function () { n.adjustToCurrentScrollTop() }), o.ww.on("resize", function () { n.getSmartStickyElementManager().setOriginalPosition(), n.adjustToCurrentScrollTop() }).trigger("resize") }; i.prototype.getSmartStickyElementManager = function () { return this.smartStickyElementManagerInstance }, i.prototype.canBeShownDueToScrolling = function () { if (this.options.show.scrolling instanceof Function) return !0 === this.options.show.scrolling(this, o.scrollingDown()); if (o.scrollingDown()) { if (this.options.show.scrolling.down) return !0 } else if (this.options.show.scrolling.up) return !0; return !1 }, i.prototype.canBeShown = function () { return !!this.getSmartStickyElementManager().canBeShownDueToOrigPosition() && this.canBeShownDueToScrolling() }, i.prototype.adjustToCurrentScrollTop = function () { return this.enabled && (this.getSmartStickyElementManager().outOfOrigPosition() ? (this.elem.hasClass(this.options.css.classes.active) || this.getSmartStickyElementManager().activateFixedPosition(), this.elem.addClass(this.options.css.classes.invisible), this.getSmartStickyElementManager().outOfContainer() || this.canBeShown() && (this.getSmartStickyElementManager().toBePlacedBottom() ? this.elem.removeClass(this.options.css.classes.invisible).removeClass(this.options.css.classes.top).addClass(this.options.css.classes.bottom) : this.elem.removeClass(this.options.css.classes.invisible).removeClass(this.options.css.classes.bottom).addClass(this.options.css.classes.top))) : this.getSmartStickyElementManager().setOriginalPosition()), this }, i.prototype.enable = function () { return this.enabled = !0, this.adjustToCurrentScrollTop(), this }, i.prototype.disable = function () { return this.enabled = !1, this.getSmartStickyElementManager().setOriginalPosition(), this }, i.prototype.hide = function () { return this.elem.addClass(this.options.css.classes.invisible), this }; var s = function (t, e) { this.elem = t, this.options = e, this.positions = ["top", "bottom", "toggle"] }; s.prototype.setOriginalPosition = function () { return this.elem.removeClass(this.options.css.classes.active).css({ left: 0, width: "100%" }).data({ offsetTop: this.elem.offset().top, height: this.elem.outerHeight() }).trigger("smartSticky.deactivate"), this.getPlaceholder().height(this.elem.outerHeight()), this }, s.prototype.activateFixedPosition = function () { return this.elem.addClass(this.options.css.classes.active).removeClass(this.options.css.classes.background).css({ left: this.getFixedLeft(), width: this.getFixedWidth() }).trigger("smartSticky.activate"), "rgba(0, 0, 0, 0)" === this.elem.css("background-color") && this.elem.addClass(this.options.css.classes.background), this }, s.prototype.getPlaceholder = function () { return this.elem.parent("." + this.options.css.classes.placeholder) }, s.prototype.getOrigOffsetTop = function () { return this.elem.data("offsetTop") }, s.prototype.getOrigHeight = function () { return this.elem.data("height") }, s.prototype.getContainer = function () { var e = this.options.container; return e instanceof Function && (e = e(this)), (e instanceof HTMLElement || e instanceof String || "string" == typeof e) && (e = t(e)), e instanceof jQuery && e.length > 0 ? e.first() : this.getPlaceholder().parent() }, s.prototype.getFixedLeft = function () { var t = this.options.css.fixed.left; return t instanceof Function && (t = t(this, o.scrollingDown())), Number.isFinite(t) || t instanceof String || "string" == typeof t ? t : this.getContainer().offset().left }, s.prototype.getFixedWidth = function () { var t = this.options.css.fixed.width; return t instanceof Function && (t = t(this, o.scrollingDown())), Number.isFinite(t) || t instanceof String || "string" == typeof t ? t : this.getContainer().outerWidth() }, s.prototype.outOfOrigPositionAbove = function () { return this.getOrigOffsetTop() - this.options.show.delay - o.ww.height() > o.getCurrentScrollTop() }, s.prototype.outOfOrigPositionUnder = function () { return this.getOrigOffsetTop() + this.getOrigHeight() + this.options.show.delay < o.getCurrentScrollTop() }, s.prototype.outOfOrigPosition = function () { return this.outOfOrigPositionAbove() || this.outOfOrigPositionUnder() }, s.prototype.outOfContainerAbove = function () { return o.getCurrentScrollTop() + (this.toBePlacedBottom() ? this.elem.outerHeight() : 0) < this.getContainer().offset().top }, s.prototype.outOfContainerUnder = function () { var t = this.getContainer(); return o.getCurrentScrollTop() + (this.toBePlacedBottom() ? o.ww.height() : this.elem.outerHeight()) > t.offset().top + t.outerHeight() }, s.prototype.outOfContainer = function () { return this.outOfContainerAbove() || this.outOfContainerUnder() }, s.prototype.getFixedPosition = function () { var t = this.options.show.fixed; if (t instanceof Function && (t = t(this, o.scrollingDown())), this.positions.indexOf(t) > -1) { if ("toggle" !== t) return t; if (!o.scrollingDown()) return "bottom" } return "top" }, s.prototype.toBePlacedBottom = function () { return "bottom" === this.getFixedPosition() }, s.prototype.canBeShownDueToOrigPosition = function () { return !(!this.outOfOrigPositionAbove() || !this.options.show.original.above) || !(!this.outOfOrigPositionUnder() || !this.options.show.original.under) }, t.fn.smartSticky = function (e) { var o = e instanceof String || "string" == typeof e, s = arguments; if (o && "instance" === e) { var n = this.data("smartStickyManagerInstance"); if (n instanceof i) return n; t.error("smartSticky has not been initialized") } return this.each(function () { var n = t(this); if (o) { var r = n.data("smartStickyManagerInstance"); r instanceof i && r[e] instanceof Function && r[e].apply(r, Array.prototype.slice.call(s, 1)) } else n.data("smartStickyManagerInstance") || n.data("smartStickyManagerInstance", new i(n, e)) }) } });